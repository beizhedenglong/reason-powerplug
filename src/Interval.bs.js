// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_option = require("bs-platform/lib/js/caml_option.js");

var intervalIdOption = {
  contents: undefined
};

function Interval(Props) {
  var delayOpt = Props.delay;
  var children = Props.children;
  var delay = delayOpt !== undefined ? delayOpt : 1000;
  var match = React.useReducer((function (state, action) {
          return {
                  times: state.times + 1 | 0,
                  delay: state.delay
                };
        }), {
        times: 0,
        delay: delay
      });
  var dispatch = match[1];
  var state = match[0];
  var start = function (param) {
    var match = intervalIdOption.contents;
    if (match !== undefined) {
      return ;
    } else {
      intervalIdOption.contents = Caml_option.some(setInterval((function (param) {
                  return Curry._1(dispatch, /* Update */0);
                }), state.delay));
      return ;
    }
  };
  var toggle = function (param) {
    var match = intervalIdOption.contents;
    if (match !== undefined) {
      var intervalId = intervalIdOption.contents;
      if (intervalId !== undefined) {
        clearInterval(Caml_option.valFromOption(intervalId));
        intervalIdOption.contents = undefined;
        return ;
      } else {
        return ;
      }
    } else {
      return start(undefined);
    }
  };
  var stop = function (param) {
    var intervalId = intervalIdOption.contents;
    if (intervalId !== undefined) {
      clearInterval(Caml_option.valFromOption(intervalId));
      intervalIdOption.contents = undefined;
      return ;
    }
    
  };
  React.useEffect((function () {
          start(undefined);
          return (function (param) {
                    return stop(undefined);
                  });
        }), []);
  React.useEffect((function () {
          if (state.delay !== delay) {
            stop(undefined);
          } else {
            start(undefined);
          }
          
        }), [state]);
  return Curry._1(children, {
              start: start,
              stop: stop,
              toggle: toggle
            });
}

var make = Interval;

exports.intervalIdOption = intervalIdOption;
exports.make = make;
/* react Not a pure module */
